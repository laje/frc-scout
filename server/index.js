// Generated by CoffeeScript 1.12.1
(function() {
  var dbComp, dbTeam, ex, express, fs, getItems, readDb, server;

  express = require('express');

  ex = express();

  fs = require('fs');

  ex.use(function(req, res, next) {
    res.header("Access-Control-Allow-Origin", "*");
    res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    return next();
  });

  getItems = function(req) {
    switch (false) {
      case !req.team:
        return readDb("team", req.team, null);
      case !req.competition:
        return readDb("competition", null, req.competition);
      default:
        return readDb();
    }
  };

  readDb = function(url, team, comp) {
    var gdata;
    if (url == null) {
      url = "all";
    }
    gdata = JSON.parse(fs.readFileSync(__dirname + "/db.json", 'utf8', function(err, data) {
      if (err) {
        return console.log(err);
      }
    }));
    switch (url) {
      case "team":
        return dbTeam(gdata, team);
      case "competition":
        return dbComp(gdata, comp);
      case "all":
        return gdata;
      default:
        return "Error";
    }
  };

  dbTeam = function(data, team) {
    if (team == null) {
      team = "all";
    }
    if (team === "all") {
      return data.teams;
    } else if (!data.teams["" + team]) {
      return {
        bad_team: team
      };
    } else {
      return data.teams["" + team];
    }
  };

  dbComp = function(data, comp) {
    if (comp == null) {
      comp = "all";
    }
    if (comp === "all") {
      return data.competitions;
    } else {
      return data.competitions["" + comp];
    }
  };

  ex.get('/read', function(req, res) {
    console.log(req.query);
    res.end(JSON.stringify(getItems(req.query)));
  });

  server = ex.listen(8081, function() {
    var host, port;
    host = server.address().address;
    port = server.address().port;
    return console.log("Server Online~ [" + host + ":" + port + "]");
  });

}).call(this);
